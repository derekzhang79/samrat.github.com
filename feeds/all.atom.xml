<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Samrat Man Singh</title><link href=".././" rel="alternate"></link><link href="http://samrat.me/feeds/all.atom.xml" rel="self"></link><id>.././</id><updated>2012-07-07T00:00:00+05:45</updated><entry><title>Help me buy a domain name</title><link href=".././blog/2012/07/help-me-buy-a-domain-name" rel="alternate"></link><updated>2012-07-07T00:00:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2012-07-07:blog/2012/07/help-me-buy-a-domain-name</id><summary type="html">&lt;p&gt;&lt;strong&gt;UPDATE- &lt;a href="http://news.ycombinator.com/user?id=Udo"&gt;Udo&lt;/a&gt; on Hacker News was kind enough to buy me a domain. This site can now be reached at &lt;a href="http://samrat.me"&gt;http://samrat.me&lt;/a&gt;. Thanks a lot, Udo.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I've got a problem. I want to buy a domain name for this website. But due to some banking regulations in my country, online payments cannot be made(for international transactions, at least.) Some companies &lt;em&gt;are&lt;/em&gt; making money by buying products on Amazon and other online shops on behalf of people here, but they're limited to only physical goods. &lt;/p&gt;
&lt;p&gt;This problem has been troubling me for a while, and I've come up with what could be a solution. Following all the recent buzz around Kickstarter- I decided to ask the Internet for help, but don't worry, &lt;strong&gt;I'm not asking for your money&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;If you're still reading this and interested in helping &lt;em&gt;and if you happen to be a person who is about to buy a domain name&lt;/em&gt;, you can support my cause by buying a domain name with my &lt;a href="http://www.namecheap.com?aff=34707"&gt;affiliate link&lt;/a&gt; on Namecheap. That way, a small percentage of what you spend on Namecheap might help me get a domain name for myself. But if you're not interested, no pressure, I can live without a domain name; just please don't take this the wrong way.&lt;/p&gt;
&lt;p&gt;If you're interested in helping but not looking to register a domain name right now, you could bookmark the link above and use that to make your purchase later. As you can probably tell, I haven't used Namecheap but I've heard they're great!&lt;/p&gt;
&lt;p&gt;Thank you :)&lt;/p&gt;</summary><category term="miscellaneous"></category><category term="kickstarter"></category><category term="domain-name"></category></entry><entry><title>Google's answer to Siri: Now</title><link href=".././blog/2012/06/googles-answer-to-siri-now" rel="alternate"></link><updated>2012-06-28T00:00:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2012-06-28:blog/2012/06/googles-answer-to-siri-now</id><summary type="html">&lt;p&gt;If you've been following the tech world recently you'd know that Apple and Google haven't been the best of friends lately. You know, because Google ripped off Apple the same way Microsoft had ripped them off back when the PC boom was kicking off. There's a statement by Steve Jobs in his biography which can only be regarded as a declaration of war on Google. And we are starting to actually see this war taking place- a few weeks ago, Apple declared that the new iOS will come with its own 'Google Maps'-like service instead of Google Maps.&lt;/p&gt;
&lt;p&gt;And now, Google too has announced its answer to what was iOS 5's most famous addition- Siri. It's not exactly like Siri- in fact, Google has tried to go a step further and make a more smarter system. If Google succeeds in rolling out Project Glass then Google Now will be a pretty nifty feature for it too. Watch the video below to find out what Now is all about:&lt;/p&gt;
&lt;iframe width="560" height="315" src="http://www.youtube.com/embed/pPqliPzHYyc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="miscellaneous"></category><category term="google"></category><category term="apple"></category></entry><entry><title>Every minute of the day...</title><link href=".././blog/2012/06/every-minute-of-the-day" rel="alternate"></link><updated>2012-06-23T12:05:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2012-06-23:blog/2012/06/every-minute-of-the-day</id><summary type="html">&lt;p&gt;I found this totally neat infograph today on &lt;a href="http://www.visualnews.com/2012/06/19/how-much-data-created-every-minute/?view=infographic"&gt;Visual News&lt;/a&gt; and thought I'd share it with you guys. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.visualnews.com/2012/06/19/how-much-data-created-every-minute/?view=infographic"&gt;&lt;img src="http://visualnews.columnfivemedia.netdna-cdn.com/wp-content/uploads/2012/06/DOMO-Data-in-One-Minute.jpg" style="width:675px; padding:10px;"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now, for a shameless plug: you might want to check out a web app I made a few weeks ago that helps you put into context how fast video is being added to Youtube- &lt;a href="http://omgyoutube.herokuapp.com/"&gt;OMGYoutube&lt;/a&gt;.&lt;/p&gt;</summary><category term="miscellaneous"></category></entry><entry><title>A first look at provisioning with Puppet(on a Vagrant box)</title><link href=".././blog/2012/06/a-first-look-at-provisioning-with-puppeton-a-vagrant-box" rel="alternate"></link><updated>2012-06-04T00:00:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2012-06-04:blog/2012/06/a-first-look-at-provisioning-with-puppeton-a-vagrant-box</id><summary type="html">&lt;p&gt;In my &lt;a href="http://samrat.github.com/blog/2012/05/flask-nginx-gunicornon-a-vagrant-box.html"&gt;previous post&lt;/a&gt;, I talked about deploying a Flask app on a Vagrant box using Gunicorn and Nginx. The response I got was mind-blowing, so I've decided to write about another neat tool that's awesome for deploying web apps- Puppet. &lt;a href="http://vagrantup.com"&gt;Vagrant&lt;/a&gt; actually encourages its users to use it, and you should use it. &lt;strong&gt;There's also an alternative to Puppet called &lt;a href="http://www.opscode.com/chef/"&gt;Chef&lt;/a&gt;; some people prefer that over Puppet, so you might want to check it out.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hopefully I'll be able to demonstrate what Puppet does and why its awesome in this post. But please note that this isn't meant as a comprehensive tutorial, you should check out Puppet's &lt;a href="http://docs.puppetlabs.com/"&gt;docs&lt;/a&gt; for that. Also even though the Puppet docs asks you to get the Learning Puppet VM, I found it much more comfortable to use &lt;code&gt;vagrant ssh&lt;/code&gt; for learning Puppet, so if you already have Vagraant installed, you might want to try that out too- just try running &lt;code&gt;puppet&lt;/code&gt; inside the virtual machine. &lt;/p&gt;
&lt;p&gt;What Puppet does is something called &lt;em&gt;provisioning&lt;/em&gt;- that means that it &lt;em&gt;&lt;a href="http://www.youtube.com/watch?v=bP8Mtiuc8XM"&gt;makes computers do what they are supposed to do&lt;/a&gt;&lt;/em&gt;. In other words, it does the configuring for you. To understand what that means, let's see it in action.&lt;/p&gt;
&lt;p&gt;First create a Vagrant box, &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;codebase_with_puppet&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;codebase_with_puppet&lt;/span&gt;

&lt;span class="n"&gt;vagrant&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should now see Vagrantfile. Open it with a text editor, then uncomment the lines&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;puppet&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;puppet&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;puppet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manifests_path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;manifests&lt;/span&gt;&amp;quot;
    &lt;span class="n"&gt;puppet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manifest_file&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pp&lt;/span&gt;&amp;quot;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, create &lt;code&gt;base.pp&lt;/code&gt; inside a folder called manifests, and add the following to it.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;nginx&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;ensure&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;present&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, run &lt;code&gt;vagrant up&lt;/code&gt;. You'll notice that Vagrant automatically installs &lt;code&gt;nginx&lt;/code&gt; after it boots the VM. You should get a message like &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;notice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Stage&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ensure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ensure&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;purged&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;present&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This can become a real treasure as this way, you won't have to memorize what you need to install, to get the app running. All the system needs is to have &lt;code&gt;puppet&lt;/code&gt; installed, after that &lt;code&gt;puppet&lt;/code&gt; with the right manifests will handle everything. &lt;/p&gt;
&lt;p&gt;Now, let's do something different with Puppet- instead of installing another package, we'll use it to configure &lt;code&gt;nginx&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;First, create a file in your local machine, inside &lt;code&gt;codebase_with_puppet&lt;/code&gt; called &lt;code&gt;codebase_nginx&lt;/code&gt;. To that file add the following&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://127.0.0.1:8000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you've gone through the &lt;a href="http://samrat.github.com/blog/2012/05/flask-nginx-gunicornon-a-vagrant-box.html"&gt;previous post&lt;/a&gt; you'll notice that it's the same configuration that we had used. &lt;/p&gt;
&lt;p&gt;Now, we'll use Puppet to make sure that the configuration file is placed where its supposed to be. To your &lt;code&gt;base.pp&lt;/code&gt; file, add &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;rm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/etc/nginx/sites-enabled/default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ensure&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;absent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nginx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;codebase&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/etc/nginx/sites-enabled/codebase_nginx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ensure&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;present&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nginx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;codebase_nginx&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run &lt;code&gt;vagrant reload&lt;/code&gt; and you're done with the &lt;code&gt;nginx&lt;/code&gt; configuration. Besides removing the repetitiveness for you, Puppet is also wonderful when you're working on a team or on an open-source project. Now, all you need to do is write the manifests and once you share them you can rest assured that the entire team has the exact same environment.&lt;br /&gt;
&lt;/p&gt;</summary><category term="deployment"></category><category term="puppet"></category><category term="vagrant"></category></entry><entry><title>Flask + Nginx + Gunicorn(on a Vagrant box)</title><link href=".././blog/2012/05/flask-nginx-gunicornon-a-vagrant-box" rel="alternate"></link><updated>2012-05-27T00:00:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2012-05-27:blog/2012/05/flask-nginx-gunicornon-a-vagrant-box</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update-&lt;/strong&gt; &lt;em&gt;Since I(and many others on Hacker News) felt that I missed up on an important tool closely related to, and tightly embraced by Vagrant, I've written a follow-up to this post which covers Puppet- you can &lt;a href="http://samrat.github.com/blog/2012/06/a-first-look-at-provisioning-with-puppeton-a-vagrant-box.html"&gt;find it here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I had some difficulty in grasping how exactly to set up a server when I tried to do so recently, so I decided to write a tutorial that will guide you through the process. Hopefully, this post will help you avoid at least some of the confusion that I encountered.&lt;/p&gt;
&lt;p&gt;We'll be using Nginx + Gunicorn to host a simple Flask app. Many of you may not have access to a server but don't worry, we'll use &lt;a href="http://vagrantup.com"&gt;Vagrant&lt;/a&gt;, which makes use of a VirtualBox VM to emulate a server. &lt;/p&gt;
&lt;h2&gt;The Flask App&lt;/h2&gt;
&lt;p&gt;Because this is a post about deployment more than development, we'll make the web app super-simple. If you're not familiar with Flask, please &lt;a href="http://flask.pocoo.org/"&gt;check it out&lt;/a&gt;, its awesome and really easy to learn. You'll also probably want to develop the app inside &lt;a href="http://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt;- it makes things a lot neater. Make a folder in your local machine(we're not working with the virtual-machine yet) for your app, I'll call it &lt;code&gt;codebase&lt;/code&gt;. Create two folders called &lt;code&gt;static&lt;/code&gt; and &lt;code&gt;templates&lt;/code&gt;, and a Python file called &lt;code&gt;app.py&lt;/code&gt;. &lt;code&gt;codebase&lt;/code&gt; should now look like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;.&lt;/span&gt;
├── &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
├── &lt;span class="n"&gt;static&lt;/span&gt;
└── &lt;span class="n"&gt;templates&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, open app.py with a text editor and add the following:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point, if you run &lt;code&gt;app.py&lt;/code&gt; with &lt;code&gt;python app.py&lt;/code&gt;, you should be able to open http://localhost:5000/ and see a "Hello World!" printed. Now, freeze your requirements with &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;freeze&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Great, now we'll start working on the actual server. &lt;/p&gt;
&lt;h2&gt;Vagrant&lt;/h2&gt;
&lt;p&gt;As I said before, Vagrant allows you to work with server-like environments on your local machine. It's absolutely great. To get &lt;a href="http://vagrantup.com"&gt;Vagrant&lt;/a&gt; up and running:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# first install Virtualbox, then,&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;vagrant&lt;/span&gt;
&lt;span class="n"&gt;vagrant&lt;/span&gt; &lt;span class="nb"&gt;box&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vagrantup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;precise32&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;box&lt;/span&gt;
&lt;span class="n"&gt;vagrant&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;
&lt;span class="n"&gt;vagrant&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If nothing went wrong, you should now see a file called &lt;code&gt;Vagrantfile&lt;/code&gt; inside &lt;code&gt;codebase&lt;/code&gt;- that's Vagrant's configuration file. Open the file, we'll need to make a few changes to the file.&lt;/p&gt;
&lt;p&gt;First, uncomment the line:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;hostonly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &amp;quot;192&lt;span class="p"&gt;.&lt;/span&gt;168&lt;span class="p"&gt;.&lt;/span&gt;33&lt;span class="p"&gt;.&lt;/span&gt;10&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and change "192.168.33.10" to "33.33.33.33". This will enable the host-machine(that is your computer) to access the webserver running on the VM.&lt;/p&gt;
&lt;p&gt;That way we should be able to access a web app running in the VM's &lt;code&gt;localhost&lt;/code&gt;, on our machine. &lt;/p&gt;
&lt;p&gt;Because, we did a &lt;code&gt;vagrant up&lt;/code&gt; the Vagrant box should already be running. Now, run &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt; &lt;span class="n"&gt;reload&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so that the changes we made to the Vagrantfile take place.&lt;/p&gt;
&lt;p&gt;After the VM restarts, run&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This allows you to run commands into the VM. Once inside the VM, we'll need to get some things installed. Run &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;virtualenv&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let's create a folder inside the VM where we'll keep the application&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;
&lt;span class="n"&gt;virtualenv&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;codebase&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And let's grab the application from our local machine&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;codebase&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Note that while I used &lt;code&gt;cp&lt;/code&gt;, its always a better idea to use &lt;code&gt;git&lt;/code&gt; or some other version-control system. For more on that, I recommend that you read &lt;a href="http://thomas.pelletier.im/2011/04/git-django-deployment/"&gt;this post&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Then, activate the virtualenv we created.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install gunicorn with &lt;code&gt;pip&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also install the other Python dependencies your app has with&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That will grab and install your app's required dependencies like Flask. &lt;/p&gt;
&lt;p&gt;Now, if you run &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;codebase&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; 127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;:&lt;/span&gt;8000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;you'll have your app running but if you try opening it from your browser you'll find that you can't actually see the "Hello World" message that we were expecting. That's where nginx comes in.&lt;/p&gt;
&lt;h2&gt;Nginx&lt;/h2&gt;
&lt;p&gt;First of all, you need to start nginx with&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;
&lt;span class="n"&gt;touch&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;codebase&lt;/span&gt;
&lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;codebase&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;codebase&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To &lt;code&gt;/etc/nginx/sites-enabled/codebase&lt;/code&gt; add&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;:&lt;/span&gt;8000&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And restart nginx with &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, from inside &lt;code&gt;codebase&lt;/code&gt; run&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;8000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If everything went right, if you visit &lt;a href="http://33.33.33.33/"&gt;http://33.33.33.33/&lt;/a&gt; you should now see the "Hello World!" message. Congratulations! You've successfully set up your own server.&lt;/p&gt;</summary><category term="deployment"></category><category term="flask"></category><category term="nginx"></category><category term="gunicorn"></category></entry><entry><title>How to convert a bookmarklet into a Chrome extension</title><link href=".././blog/2012/05/how-to-convert-a-bookmarklet-into-a-chrome-extension" rel="alternate"></link><updated>2012-05-03T18:16:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2012-05-03:blog/2012/05/how-to-convert-a-bookmarklet-into-a-chrome-extension</id><summary type="html">&lt;p&gt;I've been playing around with CoffeeScript lately and discovered a neat little tool that converts any JavaScript(and thus, Coffeescript) bookmarklet into a Chrome extension- &lt;a href="http://sandbox.self.li/bookmarklet-to-extension/"&gt;check it out&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>Would you want to be on Svbtle?</title><link href=".././blog/2012/05/would-you-want-to-be-on-svbtle" rel="alternate"></link><updated>2012-05-03T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2012-05-03:blog/2012/05/would-you-want-to-be-on-svbtle</id><summary type="html">&lt;p&gt;When I first saw the Hacker News &lt;a href="http://news.ycombinator.com/item?id=3742314"&gt;post&lt;/a&gt; about &lt;a href="http://svbtle.com/"&gt;Svbtle&lt;/a&gt;, I opened it. Svbtle looked interesting, maybe something I'd want to use but then came the part about it being only for a small number of "vetted bloggers" and like so many others I was dissapointed. The design looked so good, it was a shame I couldn't use it. &lt;/p&gt;
&lt;p&gt;Soon, &lt;em&gt;the debate&lt;/em&gt; had already started. As I said, I wasn't the only one dissapointed that it was a closed system- everyone seemed to be complaining, but &lt;a href="http://news.ycombinator.com/item?id=3744237"&gt;someone else&lt;/a&gt; had gone a step ahead and built something similar called &lt;a href="http://natewienert.com/codename-obtvse"&gt;Obtvse&lt;/a&gt; and released its code. Svbtle became the &lt;strong&gt;hot story&lt;/strong&gt; on Hacker News; even TechCrunch ran a &lt;a href="http://techcrunch.com/2012/03/24/forget-todays-drama-dustin-curtis-svbtle-is-trying-to-push-blogging-forward/"&gt;piece on it&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;So, how has things changed since I first read Dustin Curtis' post about Suvbtle? Well, now I don't really want to be on it. It's just gotten too much publicity and now the guys who are already in, the &lt;em&gt;vetted bloggers&lt;/em&gt; who were &lt;em&gt;witty and intelligent&lt;/em&gt; enough to get invited, kind of look like the bad guys. Regardless of how awesome the design is(yeah, I still the think the design is really neat), right now I think having the Svbtle brand name on my site is not something I'd want.&lt;/p&gt;
&lt;p&gt;What do you guys think? Would you want to be on Svbtle?&lt;/p&gt;</summary><category term="miscellaneous"></category></entry><entry><title>The Internet- First Impressions</title><link href=".././blog/2012/03/the-internet-first-impressions" rel="alternate"></link><updated>2012-03-20T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2012-03-20:blog/2012/03/the-internet-first-impressions</id><summary type="html">&lt;p&gt;True, the Internet has changed the way we do business, the way we access information and the way we communicate. It is a revolutionary tool, which has probably already secured a place in the history books of the future. Lately, however, the way we use the Internet has changed too. My earliest memories of the Internet is how I used to throw questions at the butler from AskJeeves.com. For those unfamiliar with it, AskJeeves(which is now Ask.com). was a search engine similar to Google.&lt;/p&gt;
&lt;p&gt;That was my introduction to the Internet: it was a butler who would try to satisfy my curiosities. However as I see it, things are changing. If I were to guess, I’d say that most people who start using the Internet these days start from social networking sites like Facebook. Now, I’ve got nothing against Facebook or social networking tools but I just don’t think that a person’s first impression of the Internet should be that it was built to emulate real-world society. Nor should kids be limited to a walled site that gives them a very limited perspective of the Internet. The internet is so much more than that. It’s so much more than what, in my opinion, most people perceive it to be. And I believe that everyone should know and make use of the endless opportunities it creates.&lt;/p&gt;
&lt;p&gt;The way people are being introduced to the internet may also be damaging to the whole ethos of the internet itself. For instance, someone with the impression that the purpose for building the Internet was to network socially will probably never make a significant contribution to the knowledge base of the internet. Furthermore, I think that these are the people who go around making stupid comments which don’t add any value to the conversation.&lt;/p&gt;
&lt;p&gt;The number of internet users is growing rapidly but do we want these people to stay limited to the walled gardens of Facebook or so many other sites which are pretty fun to hang out but limit its users off what is a gigantuan amount of knowledge? I think that we really need to rethink the way that we are introducing people to the internet. That is absolutely necessary if we are to keep the resourcefulness of the internet sustainable.&lt;/p&gt;</summary></entry><entry><title>The intersection between biology and technology</title><link href=".././blog/2011/10/the-intersection-between-biology-and-technology" rel="alternate"></link><updated>2011-10-29T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-10-29:blog/2011/10/the-intersection-between-biology-and-technology</id><summary type="html">&lt;p&gt;Towards the end of &lt;a href="http://www.amazon.com/gp/product/1451648537/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=samrat09-20&amp;amp;linkCode=as2&amp;amp;camp=217145&amp;amp;creative=399373&amp;amp;creativeASIN=1451648537"&gt;'Steve Jobs' by Walter Isaacson&lt;/a&gt;(the Steve Jobs bio), there's a quote by Steve Jobs that says something along the line of "The greatest advancements we will see in the twenty-first century will come from the &lt;em&gt;intersection of biology and technology&lt;/em&gt;." Since this comes from a visionary who foresaw and made possible so many of today's great technologies and products, this statement is particularly hard to ignore. &lt;/p&gt;
&lt;p&gt;So I began to wonder what these advancements would be like. Well, I got all sorts of ideas of what kind of innovations we could be expecting- nanobots fighting cancer cells, cyborgs(or maybe just enhanced human bodies), longer lifetimes, and lots of other fancy ideas. But, pretty soon I began wondering how much of these innovations would come from hackers. Many of the digital age's greatest innovations came from hackers working in their parents garage, so will we see any innovations in this era of "the intersection of biology and technology" coming from teenagers working on their own? Or will almost all of these innovations come from high-tech research labs?&lt;/p&gt;
&lt;p&gt;Hackers in the digital age innovated by tinkering. &lt;a href="http://en.wikipedia.org/wiki/Steve_Wozniak"&gt;Steve Wozniak&lt;/a&gt; practically taught himself to build computers. A really large portion of programmers are self taught. But, will we see guys who taught themselves to, say, sequence the DNA? Or someone who created nanobots that could enter our blood streams and fight diseases? Tinkering with electronics or software requires easily available resources like electronics components or just a computer. If you want to start tinkering with biotech, however, you'll arguably require much sophisticated devices. Also, security issues like bioterrorism arise when anyone can have access to these resources. &lt;/p&gt;
&lt;p&gt;Biology-hackers will probably have a much harder time getting the resources they need than the computer hackers did, but even if they did get the resources, the products or research they come up with is unlikely to become something really big. Because for one thing, no one would really trust products coming from college dropouts hacking in a garage enough to have have anything to do with their bodies. &lt;/p&gt;
&lt;p&gt;So, we probably won't see much direct contribution from hackers in this field. That is a really sad thing, given that they played such a huge role in the digital revolution. But who knows, maybe something will come along that will change this, somehting like the &lt;a href="http://en.wikipedia.org/wiki/Altair_8800"&gt;Altair 8800&lt;/a&gt; for the PC revolution. &lt;/p&gt;</summary><category term="technology"></category><category term="biology"></category></entry><entry><title>Videodropper- Behind the scenes</title><link href=".././blog/2011/10/videodropper-behind-the-scenes" rel="alternate"></link><updated>2011-10-21T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-10-21:blog/2011/10/videodropper-behind-the-scenes</id><summary type="html">&lt;p&gt;My &lt;a href="http://samrat.github.com/blog/videodropper.html"&gt;previous post&lt;/a&gt; about my new web app- &lt;a href="http://videodropper.ep.io"&gt;Videodropper&lt;/a&gt;, which lets you send Youtube videos to your Dropbox account got quite huge on Hacker News yesterday(At least, much more than I'd anticipated). So, I decided to write another post about Videodropper on how it works.&lt;/p&gt;
&lt;p&gt;Videodropper is powered by &lt;a href="http://python.org"&gt;Python&lt;/a&gt;, &lt;a href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt;, &lt;a href="http://redis.io"&gt;Redis&lt;/a&gt; and &lt;a href="http://celeryproject.org"&gt;Celery&lt;/a&gt;. It is hosted on &lt;a href="http://ep.io"&gt;Epio&lt;/a&gt;(as you might have guessed from the ep.io subdomain). All the downloading is handled by &lt;a href="https://github.com/rg3/youtube-dl"&gt;youtube-dl&lt;/a&gt; and of course, the uploading is done using the Dropbox API. 
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Basics&lt;/h2&gt;
&lt;p&gt;What happens when you press the "Send to Dropbox" button is that Videodropper gets the Youtube video URL(playlists won't work, more on that later), and it queues it up on a Celeryd process; when the download starts, another process also starts that monitors the size of the video file so that it doesn't cross the upload limit. So, that's two processes for one file download. Currently, Videodropper runs only four processes which means that it can process only two videos at a time. Up until now, these modest resources have served quite well, as the download and upload speed is pretty high. However, the Celery instance, which is limited to 128MB of memory runs out of memory when Videodropper starts getting a lot of requests. &lt;/p&gt;
&lt;p&gt;When Celery starts a task which in this case is a "download, then upload", youtube-dl starts downloading the Youtube video which, as I mentioned above happens quite fast. Then, if the size hasn't exceeded Dropbox's upload limit(which is 150MB now, but it should soon be upgraded to 300MB), the upload process begins. That's basically the core functionality of the app. Oh, and if you choose to optimize the video for iPhone, youtube-dl simply downloads the .mp4 file(Youtube format=18) of the video, no transcoding takes place.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Size monitoring&lt;/h2&gt;
&lt;p&gt;One obvious optimization for Videodropper is the size-monitoring as you've seen that it eats up a whole process. One solution would have been to find out the file size before downloading, but I couldn't find any way to do that(if you happen to know of any please, please tell me about it.)
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Playlist support&lt;/h2&gt;
&lt;p&gt;I've got some requests for Videodropper to start supporting playlists which is quite a reasonable request, given that Playlists is a huge part of Youtube. However, at present supporting playlists is just not an option. As I've mentioned above, Videodropper runs on a very modest server configuration and downloading playlists would surely cause Videodropper to run out of memory. The limits on the server resources are mostly because Videodropper is a free app, so I am not able to invest much money on it, so if you're interested in supporting Videodropper you could &lt;a href="https://flattr.com/thing/414622/Videodropper"&gt;donate some money on Flattr&lt;/a&gt; to help upgrade Videodropper's server capacity.&lt;/p&gt;
&lt;p&gt;In a nutshell, Flask serves the website, Celery queues up the download tasks(and also a size monitoring task) and Redis is used mostly as a backend to Celery, but also for storing the "Recent Downloads" of the user. That's it. If you have any query or suggestion feel free to shoot them at the comments below. &lt;/p&gt;</summary><category term="dropbox"></category><category term="youtube"></category><category term="webapps"></category><category term="projects"></category></entry><entry><title>Videodropper</title><link href=".././blog/2011/10/videodropper" rel="alternate"></link><updated>2011-10-20T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-10-20:blog/2011/10/videodropper</id><summary type="html">&lt;p&gt;&lt;a href="http://videodropper.ep.io"&gt;&lt;img src="http://dl.dropbox.com/u/25029287/2011-10-16-151433_1280x800_scrot.png" style="width:500px; height:300px; float:left; padding:10px;"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're constantly troubled by having to wait for Youtube to buffer videos, or want to keep some videos with you so you can watch them again and again without wasting bandwidth, then I've just recently released a web service that lets you download videos from Youtube. &lt;strong&gt;But there are plenty of websites that already do that, why do I need another one?&lt;/strong&gt;. &lt;em&gt;What &lt;a href="http://videodropper.ep.io"&gt;Videodropper&lt;/a&gt;(yeah, that's what its called) actually does is it sends videos to your Dropbox folder&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Why send it to Dropbox?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Syncing&lt;/strong&gt;- Instead of downloading the video to your computer you'll be saving it to your personal cloud which will be accessible to you on any PC or mobile device. So sending a Youtube video to your Dropbox folder is basically the same as downloading into your machine, only more awesome.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bandwidth&lt;/strong&gt;- Bandwidth &lt;em&gt;is&lt;/em&gt; the primary motivation for why I built Videodropper. I have a rather slow internet connection and I get all sort of problems when watching Youtube videos- having to wait for buffering, videos getting stuck(it always happens to me when I resize the player), and the list goes on. Videodropper solves these problems because &lt;a href="http://www.dropbox.com/help/26"&gt;&lt;strong&gt;"Dropbox is smart about using bandwidth."&lt;/strong&gt;&lt;/a&gt; Downloading happens at the fastest possible speed, but without interfering with your Internet usage, so if you have a slow connection you'll be able to download Youtube videos and still use the Internet at optimal speed. Also, once its fully downloaded &lt;strong&gt;you can watch the full video without any pain&lt;/strong&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;iOS devices&lt;/strong&gt;- Dropbox works great on iOS devices and you can optimize videos you send using Videodropper to work on the iPhone or iPod touch. After you've synced the videos, you can also watch them later offline(this makes use of Dropbox's Local Storage on your iPhone/iPod).
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How do I use Videodropper?&lt;/h2&gt;
&lt;p&gt;Using Videodropper is really easy. After linking Videodropper with your Dropbox account, you just copy the URL of the video you want to send, paste it into Videodropper and then send it. A bookmarklet is also being worked on in order to further simplify this process. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that Videodropper is still in Beta, so some of your videos may not get through properly, in case you notice any thing strange kindly send an email to samratmansingh@gmail.com or reach me on Twitter &lt;a href="http://twitter.com/samratmansingh"&gt;@samratmansingh&lt;/a&gt;&lt;/p&gt;</summary><category term="projects"></category><category term="dropbox"></category><category term="youtube"></category><category term="webapps"></category></entry><entry><title>A world without LEGO</title><link href=".././blog/2011/10/a-world-without-lego" rel="alternate"></link><updated>2011-10-14T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-10-14:blog/2011/10/a-world-without-lego</id><summary type="html">&lt;p&gt;I just read this short but really thoughtful &lt;a href="http://sahillavingia.com/blog/why-im-scared-of-the-post-pc-era/"&gt;blog post&lt;/a&gt; by &lt;a href="http://sahillavingia.com/"&gt;Sahil Lavingia&lt;/a&gt; and couldn't agree with it more. A lot of the products we use today are products of the &lt;a href="http://catb.org/~esr/faqs/hacker-howto.html"&gt;hacker mindset&lt;/a&gt;- the personal computer, Facebook, Google. All these are here today because some guy or guys didn't just sit around waiting for some big company to make something they wanted but instead, went ahead and built what they had needed. In fact, they built it even when there were big companies building such things, just because they knew they could build a better product than those that already existed. And they built those things, despite the fact that they didn't have even a small fraction of the resources the large corporations had. And then, they built it and eventually even outgrew those very corporations. Yahoo Mail now has a &lt;em&gt;Sign in with Google&lt;/em&gt; option!&lt;/p&gt;
&lt;p&gt;Things like LEGO blocks teach us that we can go beyond being users to become builders. However, as more people "start their technology career with iPads" and their Internet careers with Facebook, the tech industry might lose the enthusiastic innovation and curiosity it is now filled with. &lt;/p&gt;
&lt;p&gt;"But hopefully I am wrong." Well, I really hope he is.&lt;br /&gt;
&lt;/p&gt;</summary><category term="miscellaneous"></category></entry><entry><title>The Gamification of Games</title><link href=".././blog/2011/10/the-gamification-of-games" rel="alternate"></link><updated>2011-10-13T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-10-13:blog/2011/10/the-gamification-of-games</id><summary type="html">&lt;p&gt;On the front page of Hacker News I saw an item today: &lt;a href="http://news.ycombinator.com/item?id=3114239"&gt;&lt;em&gt;Who killed videogames? How games are getting more addictive but not fun&lt;/em&gt;&lt;/a&gt;. And frankly, I haven’t even read the “ghost story” yet. Still, I think I get from the elaborated title what the article is going to say. I’d also recently read &lt;a href="http://www.codinghorror.com/blog/2011/10/the-gamification.html"&gt;The Gamification&lt;/a&gt; on Coding Horror (which is actually not quite related to the context) and I couldn’t help make an association here between, and this is going to sound weird, games and gamification.&lt;/p&gt;
&lt;p&gt;Over the last one or two years games like Farmville, Angry Birds, Doodle Jump suddenly started getting a lot of attention. Those games got downloaded or played by millions of people. Obviously, a huge part of their success is due to the successful platforms they were built for, but the reason so many people have become hooked on to these games is actually how they are built to be addictive. The developers of these have put visibly much more focus on the addictiveness of the game, than say Age of Empires or Counter Strike. Of course, I do not mean to imply that those games aren’t fun or addictive. The thing is, gamers would fall in love with these games. But no one really “loves” Farmville  they just become obsessed with it. And while, games like Angry Birds are mighty time-killers they just don’t arouse the enthusiasm games like Call of Duty did. &lt;/p&gt;
&lt;p&gt;So why is there such a drastic change in how games are built? The answer: Money. Before, the way game developers made money was by selling the game on a CD or DVD. Today the game itself is available for free, but game companies have figured out newer, more valuable ways to mine money out of these games. And the way they made money, required the players to be very involved in those games. &lt;a href="http://en.wikipedia.org/wiki/Zynga"&gt;Zynga&lt;/a&gt;, the company behind Farmville makes money by selling virtual goods in the game(Zynga's business model is explained in much detail &lt;a href="http://www.financemanila.net/2011/02/how-does-zynga-make-money-their-business-model-and-revenues/"&gt;here&lt;/a&gt;). This is the same business model that carrier companies like AT&amp;amp;T use these days. They give you shiny smartphones at low prices and then mine money off you from your data usage. &lt;/p&gt;
&lt;p&gt;What all this means is that game companies have an incentive to get you addicted to the game, whatever it takes. And they are doing it really well. According to Wikipedia, “As of July 2011, Zynga's games on Facebook have over 232 million monthly active users.” and it’s valued at $15 billion to $20 billion. &lt;a href="http://en.wikipedia.org/wiki/Rovio"&gt;Rovio(Angry Birds)&lt;/a&gt; whose business model has been speculated &lt;a href="http://answers.onstartups.com/questions/22420/how-does-rovio-angry-birds-make-money/22434#22434"&gt;in this OnStartups answer&lt;/a&gt; also has had really high profits. &lt;/p&gt;
&lt;p&gt;What these companies have done, for good or for bad, is figured out how to successfully make a lot of money in the gaming industry. And the way they did it was by gamifying games. &lt;/p&gt;</summary><category term="miscellaneous"></category></entry><entry><title>Instamator is now open source</title><link href=".././blog/2011/09/instamator-is-now-open-source" rel="alternate"></link><updated>2011-09-14T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-09-14:blog/2011/09/instamator-is-now-open-source</id><summary type="html">&lt;p&gt;&lt;a href="http://instamator.ep.io"&gt;Instamator&lt;/a&gt;, which I &lt;a href="http://samrat.github.com/blog/instamator.html"&gt;released just a few days ago&lt;/a&gt; is now open source. You can find the source code on &lt;a href="http://github.com/samrat/instamator"&gt;Github&lt;/a&gt;. Instamator is powered by &lt;a href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt; and makes use of &lt;a href="http://redis.io"&gt;Redis&lt;/a&gt;. &lt;/p&gt;</summary><category term="open source"></category><category term="instamator"></category><category term="instagram"></category><category term="flask"></category></entry><entry><title>Instamator</title><link href=".././blog/2011/09/instamator" rel="alternate"></link><updated>2011-09-08T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-09-08:blog/2011/09/instamator</id><summary type="html">&lt;p&gt;I have been wanting to create a serious web app for some time now, and I think I just did. Well, to be more accurate its a pretty simple web service. Let me introduce to you &lt;a href="http://instamator.ep.io"&gt;Instamator&lt;/a&gt;, it lets you easily grab and use the photos you've liked on Instagram, the popular photo-sharing app(for iOS devices only- but you can check &lt;a href="http://inkstagram.com/"&gt;Inkstagram&lt;/a&gt; for a web interface). &lt;/p&gt;
&lt;p&gt;How does it do that? It produces feeds(JSON, RSS and text) about the photos you liked on Instagram which you can use to easily download all your Instagram "likes" or integrate on your website or blog. &lt;/p&gt;
&lt;p&gt;Instamator was inpired by &lt;a href="http://flickmator.heroku.com"&gt;Flickmator&lt;/a&gt;, a similar web service built by &lt;a href="http://thomas.pelletier.im"&gt;Thomas Pelletier&lt;/a&gt;. It is powered by &lt;a href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt;, &lt;a href="http://redis.io"&gt;Redis&lt;/a&gt; and hosted on &lt;a href="http://ep.io"&gt;ep.io&lt;/a&gt;.&lt;/p&gt;</summary><category term="instagram"></category><category term="webapps"></category><category term="projects"></category><category term="flask"></category></entry><entry><title>There's already a website for that</title><link href=".././blog/2011/09/theres-already-a-website-for-that" rel="alternate"></link><updated>2011-09-02T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-09-02:blog/2011/09/theres-already-a-website-for-that</id><summary type="html">&lt;p&gt;After reading &lt;a href="http://blog.zachwaugh.com/post/9666969587/how-i-name-my-apps"&gt;this article&lt;/a&gt; on naming apps, I came up with what I thought was a marvelous idea. I had been looking around for ideas to work on and this was just perfect- a web application that suggests names for apps based on keywords. Since my thoughts and ideas on the application was based only on the above-mentioned article, I merely assumed that nobody else had already created such a website. &lt;/p&gt;
&lt;p&gt;After some moments of dreamy satisfaction at my new idea, I started to plan how to actually build it. My first thought of course was to use an existing library or an API that would find words related to the keywords provided by the user. I knew there were APIs for a thesaurus, so I Googled it and found two that seemed to be popular- &lt;a href="http://words.bighugelabs.com/api.php"&gt;Big Huge Thesaurus&lt;/a&gt; and &lt;a href="http://developer.wordnik.com/"&gt;Wordnik&lt;/a&gt;. I opened both the sites, Wordnik's developer site seemed somewhat more attractive so, I checked that one out first. I could see from that page that quite popular sites and softwares like Facebook, Google Chrome, Firefox, Android had used the Wordnik API too, so I was pretty impressed. &lt;/p&gt;
&lt;p&gt;I wanted to see example usage of the API, just to get a better picture of how I'd write the app soI clicked on the 'Showcase' hoping I'd find what I was looking for. The 'Showcase' page, as it turns out would dissapoint me, not only because it didn't have what I was looking for but because I found out the moment the page loaded that I wasn't the first to conceive the idea I had. The app, called &lt;a href="http://panabee.com/"&gt;Panabee&lt;/a&gt; was listed at the very top. &lt;/p&gt;
&lt;p&gt;Naturally, I was very dissapointed by the revelation. I checked out the site and I have to say, I found myself impressed(...by an app that,some moments ago, I was hoping to build). So that was it,I was right where I started- again on the lookout for a new web app idea(this time hopeful that it hasn't already been built).  &lt;br /&gt;
&lt;/p&gt;</summary><category term="ideas"></category><category term="web apps"></category></entry><entry><title>Innovating in a developing nation</title><link href=".././blog/2011/08/innovating-in-a-developing-nation" rel="alternate"></link><updated>2011-08-30T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-08-30:blog/2011/08/innovating-in-a-developing-nation</id><summary type="html">&lt;p&gt;Innovation is really hard to find in a developing nation. Innovation requires taking risks because when you’re innovating you are, by definition, doing things in a way that is unconventional. And taking risks in a developing nation is hard. Firstly because in a developing country the people’s first priority is to achieve financial security. Thus, many end up getting a safe job with a large corporation than risking their money by starting an enterprise. However, although that may lead to a secure future, it definitely doesn’t lead to prosperity, both for the individual and the nation. &lt;/p&gt;
&lt;p&gt;So, how can a developing nation cultivate a culture of innovation? Now, I know that a lot of people will say that the government should improve its policies to become more entrepreneur-friendly. Yes, in most developing nations governmental policies and governments can become huge setbacks to entrepreneurship; in fact, that’s probably the reason why they are developing nations in the first place. But what we must realize is that governmental policies are unlikely to change anytime soon. So whatever can be done has to be from our side. &lt;/p&gt;
&lt;p&gt;The answer, in my opinion, to improve the startup scene in any nation is to &lt;em&gt;start small&lt;/em&gt;. Entrepreneurs and innovators need to learn how to start small and make the best of the resources they have available. This is actually quite easy for web startups these days, as so much software is available for free online. Also, services like Amazon EC2 make it extremely cheap to create websites that can scale in response to the popularity it gains. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bootstrapping&lt;/em&gt; is a word that has caught on a lot recently, and not without good reason. Traditionally, the way to start a business was to raise a lot of capital and then start making and selling your stuff. Bootstrapping, on the other hand, means starting with very little cash and then turning those small investments into a profit. That’s the way a lot of today’s big companies like Apple, Google and Facebook did it. (Of course, they all raised money later from investors so that they could grow even larger.) &lt;/p&gt;
&lt;p&gt;However, the most important part of innovating or starting a business is &lt;em&gt;solving problems&lt;/em&gt;- actual problems. A lot of web startups these days solve what have properly been coined the name first world problems and they aren’t really problems, at least not compared to the third world problems. Now, if you want your creation to survive in a poor developing nation, then your creation better be good. One good example of a company solving an actual problem is &lt;a href="http://harilo.com" title="Harilo"&gt;Harilo&lt;/a&gt;. People in Nepal can’t order from stores like Amazon.com so the guys at Harilo created a service which allowed them to. It may not be a totally new idea(I’ve seen another Indian website offering a similar service) but its opened up a whole new world of online shopping in Nepal. &lt;/p&gt;
&lt;p&gt;Innovation is something citizens of developing nations must indulge in- it’s the only way we’ll be able to move forward. We are already part of the wonderful world the Internet has made possible and now is the best time to join the league of people whose beautiful creations shape this world. &lt;/p&gt;</summary><category term="innovation"></category><category term="bootstrapping"></category><category term="entrepreneurship"></category></entry><entry><title>Newsblur, an awesome alternative to Google Reader</title><link href=".././blog/2011/08/newsblur-an-awesome-alternative-to-google-reader" rel="alternate"></link><updated>2011-08-07T18:15:00+05:45</updated><author><name>Samrat Man Singh</name></author><id>tag:../.,2011-08-07:blog/2011/08/newsblur-an-awesome-alternative-to-google-reader</id><summary type="html">&lt;p&gt;I've recently &lt;a href="http://news.ycombinator.com/item?id=2805152"&gt;discovered&lt;/a&gt; a new web app called &lt;a href="http://newsblur.com"&gt;Newsblur&lt;/a&gt;. Basically, Newsblur is a feed reader and aims to solve many problems Google Reader doesn't. Newsblur gives you the option of viewing the original website page along with the feed, so you can browse through the feed to see if anything interests you and then, see the actual webpage inside Newsblur itself. &lt;/p&gt;
&lt;p&gt;Newsblur also has this cool little feature called Intelligence Trainer. What you can do with it is that you can train Newsblur, to find articles from your subscriptions that are potentially interesting to you.  You can train the Newsblur Intelligence by 'liking' a tag or an author or other pieces of metadata. And by doing so, you'll help Newsblur identify similar items that could be interesting to you. More importantly, it helps you discard items which you wouldn't want to read.&lt;/p&gt;
&lt;p&gt;You can join Newsblur for free, however the free account has a limit of 64 subscriptions; you can also get a paid Premium account. I have used a free account for a while and my experience with it so far has been pretty fine. Its much faster than Google Reader and with its features, it helps me reach the &lt;em&gt;important content&lt;/em&gt; faster. However, it is a work in progress and thus some features like organizing feeds into folders, sending articles to Instapaper still need polishing.&lt;/p&gt;
&lt;p&gt;Newsblur is an &lt;a href="http://github.com/samuelclay/NewsBlur/"&gt;opensource project&lt;/a&gt; by Samuel Clay(&lt;a href="http://twitter.com/samuelclay"&gt;@samuelclay&lt;/a&gt;). Check it out, if you use Google Reader, you'll probably like it. &lt;/p&gt;</summary><category term="webapps"></category><category term="reviews"></category></entry></feed>